//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fragment_spread_with_include_directive;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.fragment_spread_with_include_directive.adapter.TestQuery_ResponseAdapter;
import com.example.fragment_spread_with_include_directive.adapter.TestQuery_VariablesAdapter;
import com.example.fragment_spread_with_include_directive.fragment.DroidDetails;
import com.example.fragment_spread_with_include_directive.fragment.HeroDetails;
import com.example.fragment_spread_with_include_directive.fragment.HumanDetails;
import com.example.fragment_spread_with_include_directive.fragment.OtherDroidDetails;
import com.example.fragment_spread_with_include_directive.selections.TestQuerySelections;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "c028b2bef2e87616481fc4e418cdde6d31d6c4a48d669d7c8ac4c5ac0145ec07";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery($withDetails: Boolean!, $skipHumanDetails: Boolean!, $optionalWithDefaultFalse: Boolean = false , $optionalWithDefaultTrue: Boolean = true , $optionalWithNoDefault: Boolean) {
   *   hero {
   *     __typename
   *     id
   *     ...HeroDetails @include(if: $withDetails) @skip(if: $skipHumanDetails)
   *     ...HumanDetails @include(if: $withDetails)
   *     ...DroidDetails @skip(if: $optionalWithDefaultTrue)
   *     ...OtherDroidDetails @include(if: $optionalWithDefaultTrue)
   *   }
   *   getBoolean(booleanArg: $optionalWithNoDefault)
   * }
   *
   * fragment HeroDetails on Character {
   *   name
   * }
   *
   * fragment HumanDetails on Human {
   *   homePlanet
   * }
   *
   * fragment DroidDetails on Droid {
   *   primaryFunction
   * }
   *
   * fragment OtherDroidDetails on Droid {
   *   id
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery($withDetails: Boolean!, $skipHumanDetails: Boolean!, $optionalWithDefaultFalse: Boolean = false , $optionalWithDefaultTrue: Boolean = true , $optionalWithNoDefault: Boolean) { hero { __typename id ...HeroDetails @include(if: $withDetails) @skip(if: $skipHumanDetails) ...HumanDetails @include(if: $withDetails) ...DroidDetails @skip(if: $optionalWithDefaultTrue) ...OtherDroidDetails @include(if: $optionalWithDefaultTrue) } getBoolean(booleanArg: $optionalWithNoDefault) }  fragment HeroDetails on Character { name }  fragment HumanDetails on Human { homePlanet }  fragment DroidDetails on Droid { primaryFunction }  fragment OtherDroidDetails on Droid { id }";

  public static final String OPERATION_NAME = "TestQuery";

  public final Boolean withDetails;

  public final Boolean skipHumanDetails;

  public final Optional<Boolean> optionalWithDefaultFalse;

  public final Optional<Boolean> optionalWithDefaultTrue;

  public final Optional<Boolean> optionalWithNoDefault;

  public TestQuery(Boolean withDetails, Boolean skipHumanDetails,
      Optional<Boolean> optionalWithDefaultFalse, Optional<Boolean> optionalWithDefaultTrue,
      Optional<Boolean> optionalWithNoDefault) {
    this.withDetails = withDetails;
    this.skipHumanDetails = skipHumanDetails;
    this.optionalWithDefaultFalse = optionalWithDefaultFalse;
    this.optionalWithDefaultTrue = optionalWithDefaultTrue;
    this.optionalWithNoDefault = optionalWithNoDefault;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    TestQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withBooleanDefaultValues);
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.fragment_spread_with_include_directive.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private Boolean withDetails;

    private Boolean skipHumanDetails;

    private Optional<Boolean> optionalWithDefaultFalse = Optional.absent();

    private Optional<Boolean> optionalWithDefaultTrue = Optional.absent();

    private Optional<Boolean> optionalWithNoDefault = Optional.absent();

    Builder() {
    }

    public Builder withDetails(Boolean withDetails) {
      this.withDetails = withDetails;
      return this;
    }

    public Builder skipHumanDetails(Boolean skipHumanDetails) {
      this.skipHumanDetails = skipHumanDetails;
      return this;
    }

    public Builder optionalWithDefaultFalse(Boolean optionalWithDefaultFalse) {
      this.optionalWithDefaultFalse = Optional.present(optionalWithDefaultFalse);
      return this;
    }

    public Builder optionalWithDefaultTrue(Boolean optionalWithDefaultTrue) {
      this.optionalWithDefaultTrue = Optional.present(optionalWithDefaultTrue);
      return this;
    }

    public Builder optionalWithNoDefault(Boolean optionalWithNoDefault) {
      this.optionalWithNoDefault = Optional.present(optionalWithNoDefault);
      return this;
    }

    public TestQuery build() {
      return new TestQuery(withDetails, skipHumanDetails, optionalWithDefaultFalse, optionalWithDefaultTrue, optionalWithNoDefault);
    }
  }

  public static class Data implements Query.Data {
    public Hero hero;

    public Boolean getBoolean;

    public Data(Hero hero, Boolean getBoolean) {
      this.hero = hero;
      this.getBoolean = getBoolean;
    }
  }

  public static class Hero {
    public String __typename;

    /**
     * The ID of the character
     */
    public String id;

    /**
     * Synthetic field for 'HeroDetails'
     */
    public HeroDetails heroDetails;

    /**
     * Synthetic field for 'HumanDetails'
     */
    public HumanDetails humanDetails;

    /**
     * Synthetic field for 'DroidDetails'
     */
    public DroidDetails droidDetails;

    /**
     * Synthetic field for 'OtherDroidDetails'
     */
    public OtherDroidDetails otherDroidDetails;

    public Hero(String __typename, String id, HeroDetails heroDetails, HumanDetails humanDetails,
        DroidDetails droidDetails, OtherDroidDetails otherDroidDetails) {
      this.__typename = __typename;
      this.id = id;
      this.heroDetails = heroDetails;
      this.humanDetails = humanDetails;
      this.droidDetails = droidDetails;
      this.otherDroidDetails = otherDroidDetails;
    }
  }
}
