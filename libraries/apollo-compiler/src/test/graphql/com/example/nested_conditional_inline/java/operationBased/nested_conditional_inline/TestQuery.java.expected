//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.nested_conditional_inline;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.nested_conditional_inline.adapter.TestQuery_ResponseAdapter;
import com.example.nested_conditional_inline.adapter.TestQuery_VariablesAdapter;
import com.example.nested_conditional_inline.selections.TestQuerySelections;
import com.example.nested_conditional_inline.type.Episode;
import java.io.IOException;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "a9f066a7d1092096ab154f16f32114a4bd71e959b789f37879249cdf6309ea86";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery($episode: Episode) {
   *   hero(episode: $episode) {
   *     __typename
   *     name
   *     ... on Human {
   *       friends {
   *         __typename
   *         name
   *         ... on Human {
   *           height(unit: FOOT)
   *         }
   *       }
   *     }
   *     ... on Droid {
   *       friends {
   *         __typename
   *         name
   *         ... on Human {
   *           height(unit: METER)
   *         }
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery($episode: Episode) { hero(episode: $episode) { __typename name ... on Human { friends { __typename name ... on Human { height(unit: FOOT) } } } ... on Droid { friends { __typename name ... on Human { height(unit: METER) } } } } }";

  public static final String OPERATION_NAME = "TestQuery";

  public final Optional<Episode> episode;

  public TestQuery(Optional<Episode> episode) {
    this.episode = episode;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    TestQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withBooleanDefaultValues);
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.nested_conditional_inline.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private Optional<Episode> episode = Optional.absent();

    Builder() {
    }

    public Builder episode(Episode episode) {
      this.episode = Optional.present(episode);
      return this;
    }

    public TestQuery build() {
      return new TestQuery(episode);
    }
  }

  public static class Data implements Query.Data {
    public Hero hero;

    public Data(Hero hero) {
      this.hero = hero;
    }
  }

  public static class Hero {
    public String __typename;

    /**
     * The name of the character
     */
    public String name;

    /**
     * Synthetic field for inline fragment on Human
     */
    public OnHuman onHuman;

    /**
     * Synthetic field for inline fragment on Droid
     */
    public OnDroid onDroid;

    public Hero(String __typename, String name, OnHuman onHuman, OnDroid onDroid) {
      this.__typename = __typename;
      this.name = name;
      this.onHuman = onHuman;
      this.onDroid = onDroid;
    }
  }

  public static class OnHuman {
    /**
     * This human's friends, or an empty list if they have none
     */
    public List<Friend> friends;

    public OnHuman(List<Friend> friends) {
      this.friends = friends;
    }
  }

  public static class Friend {
    public String __typename;

    /**
     * The name of the character
     */
    public String name;

    /**
     * Synthetic field for inline fragment on Human
     */
    public OnHuman1 onHuman;

    public Friend(String __typename, String name, OnHuman1 onHuman) {
      this.__typename = __typename;
      this.name = name;
      this.onHuman = onHuman;
    }
  }

  public static class OnHuman1 {
    /**
     * Height in the preferred unit, default is meters
     */
    public Double height;

    public OnHuman1(Double height) {
      this.height = height;
    }
  }

  public static class OnDroid {
    /**
     * This droid's friends, or an empty list if they have none
     */
    public List<Friend1> friends;

    public OnDroid(List<Friend1> friends) {
      this.friends = friends;
    }
  }

  public static class Friend1 {
    public String __typename;

    /**
     * The name of the character
     */
    public String name;

    /**
     * Synthetic field for inline fragment on Human
     */
    public OnHuman2 onHuman;

    public Friend1(String __typename, String name, OnHuman2 onHuman) {
      this.__typename = __typename;
      this.name = name;
      this.onHuman = onHuman;
    }
  }

  public static class OnHuman2 {
    /**
     * Height in the preferred unit, default is meters
     */
    public Double height;

    public OnHuman2(Double height) {
      this.height = height;
    }
  }
}
