//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.hero_with_review;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.Mutation;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.hero_with_review.adapter.TestQuery_ResponseAdapter;
import com.example.hero_with_review.adapter.TestQuery_VariablesAdapter;
import com.example.hero_with_review.selections.TestQuerySelections;
import com.example.hero_with_review.type.Episode;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;

public class TestQuery implements Mutation<TestQuery.Data> {
  public static final String OPERATION_ID = "1faa220c7551ff1343a9bce722af8c12b87c70cc579f743aff1374ae1066f163";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * mutation TestQuery($ep: Episode!) {
   *   createReview(episode: $ep, review: {
   *     stars: 5
   *     listOfEnums: \[JEDI,EMPIRE,NEWHOPE\]
   *     listOfStringNonOptional: \["1","2","3"\]
   *     favoriteColor: {
   *       red: 1
   *       blue: 1
   *     }
   *
   *   }
   *   ) {
   *     stars
   *     commentary
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "mutation TestQuery($ep: Episode!) { createReview(episode: $ep, review: { stars: 5 listOfEnums: [JEDI,EMPIRE,NEWHOPE] listOfStringNonOptional: [\"1\",\"2\",\"3\"] favoriteColor: { red: 1 blue: 1 }  } ) { stars commentary } }";

  public static final String OPERATION_NAME = "TestQuery";

  public final Episode ep;

  public TestQuery(Episode ep) {
    this.ep = ep;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    TestQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withBooleanDefaultValues);
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.hero_with_review.type.Mutation.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private Episode ep;

    Builder() {
    }

    public Builder ep(Episode ep) {
      this.ep = ep;
      return this;
    }

    public TestQuery build() {
      return new TestQuery(ep);
    }
  }

  public static class Data implements Mutation.Data {
    public CreateReview createReview;

    public Data(CreateReview createReview) {
      this.createReview = createReview;
    }
  }

  public static class CreateReview {
    /**
     * The number of stars this review gave, 1-5
     */
    public Integer stars;

    /**
     * Comment about the movie
     */
    public String commentary;

    public CreateReview(Integer stars, String commentary) {
      this.stars = stars;
      this.commentary = commentary;
    }
  }
}
