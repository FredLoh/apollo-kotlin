//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.reserved_keywords;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.reserved_keywords.adapter.TestQuery_ResponseAdapter;
import com.example.reserved_keywords.selections.TestQuerySelections;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "d2f555fdc0bd9ea0a928c39aa7818ac66b0c0a0870772b1fb57387c3c3cf8577";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery {
   *   yield: hero {
   *     while: id
   *     it: name
   *   }
   *   objects: search(text: "abc") {
   *     __typename
   *     ... on Character {
   *       name
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery { yield: hero { while: id it: name } objects: search(text: \"abc\") { __typename ... on Character { name } } }";

  public static final String OPERATION_NAME = "TestQuery";

  public TestQuery() {

  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    // This operation doesn't have any variable
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.reserved_keywords.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    Builder() {
    }

    public TestQuery build() {
      return new TestQuery();
    }
  }

  public static class Data implements Query.Data {
    public Yield yield;

    public List<Object> objects;

    public Data(Yield yield, List<Object> objects) {
      this.yield = yield;
      this.objects = objects;
    }
  }

  public static class Yield {
    /**
     * The ID of the character
     */
    public String while_;

    /**
     * The name of the character
     */
    public String it;

    public Yield(String while_, String it) {
      this.while_ = while_;
      this.it = it;
    }
  }

  public static class Object {
    public String __typename;

    /**
     * Synthetic field for inline fragment on Character
     */
    public OnCharacter onCharacter;

    public Object(String __typename, OnCharacter onCharacter) {
      this.__typename = __typename;
      this.onCharacter = onCharacter;
    }
  }

  public static class OnCharacter {
    /**
     * The name of the character
     */
    public String name;

    public OnCharacter(String name) {
      this.name = name;
    }
  }
}
