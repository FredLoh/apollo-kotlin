//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.target_name;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Optional;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.target_name.adapter.TestQuery_ResponseAdapter;
import com.example.target_name.adapter.TestQuery_VariablesAdapter;
import com.example.target_name.selections.TestQuerySelections;
import com.example.target_name.type.renamedEnum;
import com.example.target_name.type.renamedInput;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "42f2acf77ef3db730fa970cbbba1ca04133fcea023d8355d4eb0c27ebe51e30f";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery($input: ReservedInput, $scalar: ReservedScalar, $enum: ReservedEnum) {
   *   object(input: $input) {
   *     field
   *   }
   *   interface {
   *     field
   *   }
   *   union {
   *     __typename
   *     ... on ReservedObject {
   *       field
   *     }
   *   }
   *   scalar(scalar: $scalar)
   *   enum(enum: $enum)
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery($input: ReservedInput, $scalar: ReservedScalar, $enum: ReservedEnum) { object(input: $input) { field } interface { field } union { __typename ... on ReservedObject { field } } scalar(scalar: $scalar) enum(enum: $enum) }";

  public static final String OPERATION_NAME = "TestQuery";

  public final Optional<renamedInput> input;

  public final Optional<java.lang.Object> scalar;

  public final Optional<renamedEnum> enum_;

  public TestQuery(Optional<renamedInput> input, Optional<java.lang.Object> scalar,
      Optional<renamedEnum> enum_) {
    this.input = input;
    this.scalar = scalar;
    this.enum_ = enum_;
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    TestQuery_VariablesAdapter.INSTANCE.serializeVariables(writer, this, customScalarAdapters, withBooleanDefaultValues);
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.target_name.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    private Optional<renamedInput> input = Optional.absent();

    private Optional<java.lang.Object> scalar = Optional.absent();

    private Optional<renamedEnum> enum_ = Optional.absent();

    Builder() {
    }

    public Builder input(renamedInput input) {
      this.input = Optional.present(input);
      return this;
    }

    public Builder scalar(java.lang.Object scalar) {
      this.scalar = Optional.present(scalar);
      return this;
    }

    public Builder enum_(renamedEnum enum_) {
      this.enum_ = Optional.present(enum_);
      return this;
    }

    public TestQuery build() {
      return new TestQuery(input, scalar, enum_);
    }
  }

  public static class Data implements Query.Data {
    public Object object;

    public Interface interface_;

    public Union union;

    public java.lang.Object scalar;

    public renamedEnum enum_;

    public Data(Object object, Interface interface_, Union union, java.lang.Object scalar,
        renamedEnum enum_) {
      this.object = object;
      this.interface_ = interface_;
      this.union = union;
      this.scalar = scalar;
      this.enum_ = enum_;
    }
  }

  public static class Object {
    public String field;

    public Object(String field) {
      this.field = field;
    }
  }

  public static class Interface {
    public String field;

    public Interface(String field) {
      this.field = field;
    }
  }

  public static class Union {
    public String __typename;

    /**
     * Synthetic field for inline fragment on ReservedObject
     */
    public OnReservedObject onReservedObject;

    public Union(String __typename, OnReservedObject onReservedObject) {
      this.__typename = __typename;
      this.onReservedObject = onReservedObject;
    }
  }

  public static class OnReservedObject {
    public String field;

    public OnReservedObject(String field) {
      this.field = field;
    }
  }
}
