//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragment_merge_fields;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.inline_fragment_merge_fields.adapter.TestQuery_ResponseAdapter;
import com.example.inline_fragment_merge_fields.selections.TestQuerySelections;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "516a2d4b3fe97536486d2d559538aab9949d7c7e0de7081caec02439a0cb3969";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery {
   *   hero {
   *     __typename
   *     name
   *     friendsConnection {
   *       edges {
   *         node {
   *           name
   *         }
   *       }
   *     }
   *     ... on Character {
   *       name
   *       profileLink
   *       friendsConnection {
   *         edges {
   *           node {
   *             name
   *           }
   *         }
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery { hero { __typename name friendsConnection { edges { node { name } } } ... on Character { name profileLink friendsConnection { edges { node { name } } } } } }";

  public static final String OPERATION_NAME = "TestQuery";

  public TestQuery() {

  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    // This operation doesn't have any variable
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.inline_fragment_merge_fields.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    Builder() {
    }

    public TestQuery build() {
      return new TestQuery();
    }
  }

  public static class Data implements Query.Data {
    public Hero hero;

    public Data(Hero hero) {
      this.hero = hero;
    }
  }

  public static class Hero {
    public String __typename;

    /**
     * The name of the character
     */
    public String name;

    /**
     * The friends of the character exposed as a connection with edges
     */
    public FriendsConnection friendsConnection;

    /**
     * Synthetic field for inline fragment on Character
     */
    public OnCharacter onCharacter;

    public Hero(String __typename, String name, FriendsConnection friendsConnection,
        OnCharacter onCharacter) {
      this.__typename = __typename;
      this.name = name;
      this.friendsConnection = friendsConnection;
      this.onCharacter = onCharacter;
    }
  }

  public static class FriendsConnection {
    /**
     * The edges for each of the character's friends.
     */
    public List<Edge> edges;

    public FriendsConnection(List<Edge> edges) {
      this.edges = edges;
    }
  }

  public static class Edge {
    /**
     * The character represented by this friendship edge
     */
    public Node node;

    public Edge(Node node) {
      this.node = node;
    }
  }

  public static class Node {
    /**
     * The name of the character
     */
    public String name;

    public Node(String name) {
      this.name = name;
    }
  }

  public static class OnCharacter {
    /**
     * The name of the character
     */
    public String name;

    /**
     * Profile link
     */
    public Object profileLink;

    /**
     * The friends of the character exposed as a connection with edges
     */
    public FriendsConnection1 friendsConnection;

    public OnCharacter(String name, Object profileLink, FriendsConnection1 friendsConnection) {
      this.name = name;
      this.profileLink = profileLink;
      this.friendsConnection = friendsConnection;
    }
  }

  public static class FriendsConnection1 {
    /**
     * The edges for each of the character's friends.
     */
    public List<Edge1> edges;

    public FriendsConnection1(List<Edge1> edges) {
      this.edges = edges;
    }
  }

  public static class Edge1 {
    /**
     * The character represented by this friendship edge
     */
    public Node1 node;

    public Edge1(Node1 node) {
      this.node = node;
    }
  }

  public static class Node1 {
    /**
     * The name of the character
     */
    public String name;

    public Node1(String name) {
      this.name = name;
    }
  }
}
