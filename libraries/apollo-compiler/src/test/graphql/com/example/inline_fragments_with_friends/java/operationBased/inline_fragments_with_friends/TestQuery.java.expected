//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.inline_fragments_with_friends;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.inline_fragments_with_friends.adapter.TestQuery_ResponseAdapter;
import com.example.inline_fragments_with_friends.selections.TestQuerySelections;
import com.example.inline_fragments_with_friends.type.Episode;
import java.io.IOException;
import java.lang.Double;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "43bfea6068cd77041d723551dd119f0676f6c333620dd281a668eca49d14fcb5";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery {
   *   hero {
   *     __typename
   *     name
   *     ... on Human {
   *       height
   *       friends {
   *         appearsIn
   *       }
   *     }
   *     ... on Droid {
   *       primaryFunction
   *       friends {
   *         id
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery { hero { __typename name ... on Human { height friends { appearsIn } } ... on Droid { primaryFunction friends { id } } } }";

  public static final String OPERATION_NAME = "TestQuery";

  public TestQuery() {

  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    // This operation doesn't have any variable
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.inline_fragments_with_friends.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    Builder() {
    }

    public TestQuery build() {
      return new TestQuery();
    }
  }

  public static class Data implements Query.Data {
    public Hero hero;

    public Data(Hero hero) {
      this.hero = hero;
    }
  }

  public static class Hero {
    public String __typename;

    /**
     * The name of the character
     */
    public String name;

    /**
     * Synthetic field for inline fragment on Human
     */
    public OnHuman onHuman;

    /**
     * Synthetic field for inline fragment on Droid
     */
    public OnDroid onDroid;

    public Hero(String __typename, String name, OnHuman onHuman, OnDroid onDroid) {
      this.__typename = __typename;
      this.name = name;
      this.onHuman = onHuman;
      this.onDroid = onDroid;
    }
  }

  public static class OnHuman {
    /**
     * Height in the preferred unit, default is meters
     */
    public Double height;

    /**
     * This human's friends, or an empty list if they have none
     */
    public List<Friend> friends;

    public OnHuman(Double height, List<Friend> friends) {
      this.height = height;
      this.friends = friends;
    }
  }

  public static class Friend {
    /**
     * The movies this character appears in
     */
    public List<Episode> appearsIn;

    public Friend(List<Episode> appearsIn) {
      this.appearsIn = appearsIn;
    }
  }

  public static class OnDroid {
    /**
     * This droid's primary function
     */
    public String primaryFunction;

    /**
     * This droid's friends, or an empty list if they have none
     */
    public List<Friend1> friends;

    public OnDroid(String primaryFunction, List<Friend1> friends) {
      this.primaryFunction = primaryFunction;
      this.friends = friends;
    }
  }

  public static class Friend1 {
    /**
     * The ID of the character
     */
    public String id;

    public Friend1(String id) {
      this.id = id;
    }
  }
}
