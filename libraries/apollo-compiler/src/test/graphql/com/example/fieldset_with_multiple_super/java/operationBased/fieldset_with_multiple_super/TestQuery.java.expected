//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.fieldset_with_multiple_super;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.fieldset_with_multiple_super.adapter.TestQuery_ResponseAdapter;
import com.example.fieldset_with_multiple_super.selections.TestQuerySelections;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "6faa0db26a1466e969ffc48d42fef45419406628c6c607fbbb1a0da1d592fdb2";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery {
   *   c {
   *     __typename
   *     ... on A {
   *       __typename
   *       fieldA1
   *       ... on B {
   *         fieldB1
   *       }
   *     }
   *     ... on B {
   *       __typename
   *       fieldB2
   *       ... on A {
   *         fieldA2
   *       }
   *     }
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery { c { __typename ... on A { __typename fieldA1 ... on B { fieldB1 } } ... on B { __typename fieldB2 ... on A { fieldA2 } } } }";

  public static final String OPERATION_NAME = "TestQuery";

  public TestQuery() {

  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    // This operation doesn't have any variable
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, false);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.fieldset_with_multiple_super.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    Builder() {
    }

    public TestQuery build() {
      return new TestQuery();
    }
  }

  public static class Data implements Query.Data {
    public C c;

    public Data(C c) {
      this.c = c;
    }
  }

  public static class C {
    public String __typename;

    /**
     * Synthetic field for inline fragment on A
     */
    public OnA onA;

    /**
     * Synthetic field for inline fragment on B
     */
    public OnB1 onB;

    public C(String __typename, OnA onA, OnB1 onB) {
      this.__typename = __typename;
      this.onA = onA;
      this.onB = onB;
    }
  }

  public static class OnA {
    public String __typename;

    public String fieldA1;

    /**
     * Synthetic field for inline fragment on B
     */
    public OnB onB;

    public OnA(String __typename, String fieldA1, OnB onB) {
      this.__typename = __typename;
      this.fieldA1 = fieldA1;
      this.onB = onB;
    }
  }

  public static class OnB {
    public String fieldB1;

    public OnB(String fieldB1) {
      this.fieldB1 = fieldB1;
    }
  }

  public static class OnB1 {
    public String __typename;

    public String fieldB2;

    /**
     * Synthetic field for inline fragment on A
     */
    public OnA1 onA;

    public OnB1(String __typename, String fieldB2, OnA1 onA) {
      this.__typename = __typename;
      this.fieldB2 = fieldB2;
      this.onA = onA;
    }
  }

  public static class OnA1 {
    public String fieldA2;

    public OnA1(String fieldA2) {
      this.fieldA2 = fieldA2;
    }
  }
}
