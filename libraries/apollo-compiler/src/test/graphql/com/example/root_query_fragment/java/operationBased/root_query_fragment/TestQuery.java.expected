//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '$VERSION'.
//
package com.example.root_query_fragment;

import com.apollographql.apollo3.api.CompiledField;
import com.apollographql.apollo3.api.CompositeAdapter;
import com.apollographql.apollo3.api.CustomScalarAdapters;
import com.apollographql.apollo3.api.ObjectCompositeAdapter;
import com.apollographql.apollo3.api.Query;
import com.apollographql.apollo3.api.json.JsonWriter;
import com.example.root_query_fragment.adapter.TestQuery_ResponseAdapter;
import com.example.root_query_fragment.fragment.QueryFragment;
import com.example.root_query_fragment.selections.TestQuerySelections;
import java.io.IOException;
import java.lang.Override;
import java.lang.String;

public class TestQuery implements Query<TestQuery.Data> {
  public static final String OPERATION_ID = "9c53d7ef056cfcd269d1bfd4137fdb5a41ced7343ed524f03ec915c7a8d6f483";

  /**
   * The minimized GraphQL document being sent to the server to save a few bytes.
   * The un-minimized version is:
   *
   * query TestQuery {
   *   __typename
   *   ...QueryFragment
   * }
   *
   * fragment QueryFragment on Query {
   *   __typename
   *   hero {
   *     name
   *   }
   * }
   */
  public static final String OPERATION_DOCUMENT = "query TestQuery { __typename ...QueryFragment }  fragment QueryFragment on Query { __typename hero { name } }";

  public static final String OPERATION_NAME = "TestQuery";

  public TestQuery() {

  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public String id() {
    return OPERATION_ID;
  }

  @Override
  public String document() {
    return OPERATION_DOCUMENT;
  }

  @Override
  public String name() {
    return OPERATION_NAME;
  }

  @Override
  public void serializeVariables(JsonWriter writer, CustomScalarAdapters customScalarAdapters,
      boolean withBooleanDefaultValues) throws IOException {
    // This operation doesn't have any variable
  }

  @Override
  public CompositeAdapter<Data> adapter() {
    return new ObjectCompositeAdapter<Data>(TestQuery_ResponseAdapter.Data.INSTANCE, true);
  }

  @Override
  public CompiledField rootField() {
    return new CompiledField.Builder(
      "data",
      com.example.root_query_fragment.type.Query.type
    )
    .selections(TestQuerySelections.__root)
    .build();
  }

  public static final class Builder {
    Builder() {
    }

    public TestQuery build() {
      return new TestQuery();
    }
  }

  public static class Data implements Query.Data {
    public String __typename;

    /**
     * Synthetic field for 'QueryFragment'
     */
    public QueryFragment queryFragment;

    public Data(String __typename, QueryFragment queryFragment) {
      this.__typename = __typename;
      this.queryFragment = queryFragment;
    }
  }
}
